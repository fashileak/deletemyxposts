name: Tweet Deletion

on:
  schedule:
    - cron: '0 0 * * *'  # Runs at 00:00 UTC daily
  workflow_dispatch:      # Allows manual trigger

jobs:
  delete-tweets:
    runs-on: ubuntu-latest
    
    env:
      CONSUMER_KEY: ${{ secrets.CONSUMER_KEY }}
      CONSUMER_SECRET: ${{ secrets.CONSUMER_SECRET }}
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests requests-oauthlib python-dotenv

    - name: Run tweet deletion script
      id: run_script
      shell: bash
      run: |
        python main.py
        echo "status=$?" >> "$GITHUB_OUTPUT"

    - name: Handle script exit code
      if: always()
      shell: bash
      run: |
        STATUS="${{ steps.run_script.outputs.status }}"
        echo "Script exit code: $STATUS"
        
        if [ -z "$STATUS" ]; then
          echo "Error: Exit code is empty"
          exit 1
        fi
        
        case $STATUS in
          0)
            echo "Success: Script completed normally"
            exit 0
            ;;
          401)
            echo "Authentication failed. Please check your API credentials."
            exit 1
            ;;
          429)
            echo "Rate limit exceeded. Scheduling retry in 15 minutes."
            gh workflow run tweet-deletion.yml --ref ${{ github.ref }}
            exit 0
            ;;
          2)
            echo "Monthly usage cap reached. Scheduling retry next month."
            gh workflow run tweet-deletion.yml --ref ${{ github.ref }}
            exit 0
            ;;
          3)
            echo "Daily deletion limit reached. Scheduling retry tomorrow."
            gh workflow run tweet-deletion.yml --ref ${{ github.ref }}
            exit 0
            ;;
          *)
            echo "Unknown error occurred (Exit code: $STATUS)"
            exit 1
            ;;
        esac
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} 